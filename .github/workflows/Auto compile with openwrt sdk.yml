#
# Copyright (c) 2022-2023 SMALLPROGRAM <https://github.com/smallprogram>
# Description: Auto compile
#
name: "Auto compile with openwrt sdk"
on:
  workflow_dispatch:
    inputs:
      token:
        description: 'ngok token'
        required: true
        default: ''
  push:
    branches:
      - 'main'
    paths:
      - 'luci-app-passwall2/Makefile'
env:
  TZ: Asia/Shanghai
  passwall2: ${{ github.repository }}
  packages: xiaorouji/openwrt-passwall-packages

jobs:
  job_build_passwall2:
    name: Build passwall2 [Luci ${{ matrix.luci_ver }}]
    needs: job_check
    if: needs.job_check.outputs.has_update == 'true'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - sdk_ver: 23.03
            luci_ver: 23.03            
            sdk_url: https://downloads.openwrt.org/releases/22.03.3/targets/ramips/mt7621/openwrt-sdk-22.03.3-ramips-mt7621_gcc-11.2.0_musl.Linux-x86_64.tar.xz

    steps:
      - name: Start SSH session
        uses: luchihoratiu/debug-via-ssh@main
        with:
          NGROK_AUTH_TOKEN: ${{ github.event.inputs.token }}
          SSH_PASS: ${{ secrets.SSH_PASS }}

      - name: Install packages
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          df -hT
          echo "Install packages"
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean

      - name: Cache openwrt SDK
        id: cache-sdk
        uses: actions/cache@v4
        with:
          path: sdk
          key: openwrt-sdk-23.03-rc3-mt7621

      - name: Initialization environment
        if: steps.cache-sdk.outputs.cache-hit != 'true'
        env:
          url_sdk: https://downloads.openwrt.org/releases/22.03.3/targets/ramips/mt7621/openwrt-sdk-22.03.3-ramips-mt7621_gcc-11.2.0_musl.Linux-x86_64.tar.xz
        run: |
          wget ${{ env.url_sdk }}
          file_name=$(echo ${{env.url_sdk}} | awk -F/ '{print $NF}')
          mkdir sdk && tar -xJf $file_name -C ./sdk --strip-components=1
          cd sdk
          echo "src-git base https://github.com/openwrt/openwrt.git;openwrt-${{ matrix.sdk_ver }}" > feeds.conf
          echo "src-git packages https://github.com/openwrt/packages.git;openwrt-${{ matrix.sdk_ver }}" >> feeds.conf
          echo "src-git luci https://github.com/openwrt/luci.git;openwrt-${{ matrix.luci_ver }}" >> feeds.conf
          echo "src-git routing https://git.openwrt.org/feed/routing.git;openwrt-${{ matrix.sdk_ver }}"  >> feeds.conf
          echo "src-git passwall_packages https://github.com/${{ env.packages}}.git;main" >> feeds.conf
          echo "src-git passwall2 https://github.com/${{ env.passwall2 }}.git;main" >> feeds.conf
          ./scripts/feeds update -a
          echo "CONFIG_PACKAGE_luci-app-passwall2=m" > .config
          ./scripts/feeds install -d n luci-app-passwall2
          make download -j8

      - name: Configure passwall2
        run: |
          cd sdk
          ./scripts/feeds update passwall_packages
          ./scripts/feeds update passwall2
          ./scripts/feeds install luci-app-passwall2
          echo "CONFIG_ALL_NONSHARED=n" > .config
          echo "CONFIG_ALL_KMODS=n" >> .config
          echo "CONFIG_ALL=n" >> .config
          echo "CONFIG_AUTOREMOVE=n" >> .config
          echo "CONFIG_LUCI_LANG_zh_Hans=y" >> .config

          echo "CONFIG_PACKAGE_luci-app-passwall2=m" >> .config
          echo "CONFIG_PACKAGE_luci-app-passwall2_Iptables_Transparent_Proxy=n" >> .config
          echo "CONFIG_PACKAGE_luci-app-passwall2_Nftables_Transparent_Proxy=n" >> .config
          echo "CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Haproxy=n" >> .config
          echo "CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Hysteria=n" >> .config
          echo "CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_IPv6_Nat=n" >> .config
          echo "CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_NaiveProxy=n" >> .config
          echo "CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Shadowsocks_Libev_Client=n" >> .config
          echo "CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Shadowsocks_Libev_Server=n" >> .config
          echo "CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Shadowsocks_Rust_Client=n" >> .config
          echo "CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Shadowsocks_Rust_Server=n" >> .config
          echo "CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_ShadowsocksR_Libev_Client=n" >> .config
          echo "CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_ShadowsocksR_Libev_Server=n" >> .config
          echo "CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Simple_Obfs=n" >> .config
          echo "CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_SingBox=n" >> .config
          echo "CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_tuic_client=n" >> .config
          echo "CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_V2ray_Plugin=n" >> .config

          make defconfig

      - name: Compile passwall2
        id: compile
        run: |
          cd sdk
          echo "make package/luci-app-passwall2/{clean,compile} -j$(nproc)"
          make package/luci-app-passwall2/{clean,compile} -j$(nproc)
          mv bin/packages/mt7621/passwall2/ ../
          rm .config .config.old
          cd ../passwall2
          for i in $(ls); do mv $i luci-${{ matrix.luci_ver }}_$i; done
          cd ..
          echo "status=success" >> $GITHUB_OUTPUT
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV

      - name: Upload passwall2 ipks to release
        uses: softprops/action-gh-release@master
        if: steps.compile.outputs.status == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{needs.job_check.outputs.passwall2_version}}
          files: ${{ env.FIRMWARE }}/passwall2/*.ipk
